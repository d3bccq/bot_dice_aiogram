#–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤–µ—Ä—Å–∏–∏ aiogram 2.25.1 –∏ –∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ python 10-11 –≤–µ—Ä—Å–∏–∏
#–£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –≤ cfg —Ñ–∞–π–ª–µ


import asyncio
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.redis import RedisStorage2
from aiogram.dispatcher import DEFAULT_RATE_LIMIT
from aiogram.dispatcher.handler import CancelHandler, current_handler
from aiogram.dispatcher.middlewares import BaseMiddleware
from aiogram.utils.exceptions import Throttled
from aiogram.dispatcher.filters import BoundFilter
from asyncio import sleep
import cfg
from aiogram.types import ChatPermissions
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters.builtin import Text, Command
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils.callback_data import CallbackData
import db


#–í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å
async def on_sturtup(_):
    db.sq.connect("db/database.db")
print("–ü–æ–¥–∫–ª—é—á—ë–Ω –∫ –ë–î")
print("–Ø –ñ–ò–í–û–ô –û–†–ò–ì–ò–ù–ê–õ")
 

#–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏ –¥–ª—è –º—É—Ç–∞ –∏ —Ä–∞–∑–º—É—Ç–∞
perms1 = ChatPermissions()
perms2 = ChatPermissions(can_send_audios=True, can_add_web_page_previews=True, can_change_info=True, can_invite_users=True, can_manage_topics=True, can_pin_messages=True, can_send_documents=True, an_send_media_messages=True, can_send_messages=True, can_send_other_messages=True, can_send_photos=True, can_send_polls=True, can_send_video_notes=True, can_send_videos=True, can_send_voice_notes=True)

#–õ–û–ì–ò–ù
logging.basicConfig(level=logging.INFO)

#–°–∞–º –±–æ—Ç
bot = Bot(token = cfg.TOKEN2) #–í–∞—à —Ç–æ–∫–µ–Ω
dp = Dispatcher(bot, storage=MemoryStorage())


#–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç
ikb = InlineKeyboardMarkup(row_width=1)
ikb1 = InlineKeyboardButton(text="–ù–∞–∂–º–∏ —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —á–∞—Ç",
                            url='https://telegram.me/mutekub_bot?startgroup=new')
ikb.add(ikb1)


#–ë–ª–æ–∫ –∞–Ω—Ç–∏—Å–ø–∞–º–∞ –≤–∑—è—Ç—ã–π –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
def rate_limit(limit: int, key=None):

    def decorator(func):
        setattr(func, 'throttling_rate_limit', limit)
        if key:
            setattr(func, 'throttling_key', key)
        return func

    return decorator

class ThrottlingMiddleware(BaseMiddleware):

    def __init__(self, limit=DEFAULT_RATE_LIMIT, key_prefix='antiflood_'):
        self.rate_limit = limit
        self.prefix = key_prefix
        super(ThrottlingMiddleware, self).__init__()

    async def on_process_message(self, message: types.Message, data: dict):
        
        handler = current_handler.get()

        
        dispatcher = Dispatcher.get_current()
        
        if handler:
            limit = getattr(handler, 'throttling_rate_limit', self.rate_limit)
            key = getattr(handler, 'throttling_key', f"{self.prefix}_{handler.__name__}")
        else:
            limit = self.rate_limit
            key = f"{self.prefix}_message"

        
        try:
            await dispatcher.throttle(key, rate=limit)
        except Throttled as t:
            
            await self.message_throttled(message, t)

            
            raise CancelHandler()

    async def message_throttled(self, message: types.Message, throttled: Throttled):
        handler = current_handler.get()
        dispatcher = Dispatcher.get_current()
        if handler:
            key = getattr(handler, 'throttling_key', f"{self.prefix}_{handler.__name__}")
        else:
            key = f"{self.prefix}_message"

        
        delta = throttled.rate - throttled.delta

        #–¢—É—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∞–Ω—Ç–∏—Å–ø–∞–º–∞ (–≤–º–µ—Å—Ç–æ 10)
        if throttled.exceeded_count <= 10:
            await message.delete()
            await message.answer(None)
           

        
        await asyncio.sleep(delta)

        
        thr = await dispatcher.check_key(key)

        # –í–º–µ—Å—Ç–æ None –º–æ–∂–µ—Ç–µ –≤–ø–∏—Å–∞—Ç—å —Å–≤–æ—ë –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ –º—É—Ç
        if thr.exceeded_count == throttled.exceeded_count:
            await message.answer(None)


#@Rate_limit –Ω–∞–¥–æ —É–∫–∞—â—ã–≤–∞—Ç—å –ø–µ—Ä–µ–¥ –±–ª–æ–∫–æ–º –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∞–Ω—Ç–∏—Å–ø–∞–º–∞, –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —Å 5 –Ω–∞ –¥—Ä—É–≥–æ–µ

#–í—ã–≤–æ–¥ –∏—Ñ–Ω–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
@rate_limit(5)
@dp.message_handler(commands=['INFO'])
async def help_command(message: types.Message):
  if message.chat.type == 'private':
    #await bot.send_message(chat_id=1,text="@"f"{message.from_user.username} <b>"f"[{message.from_user.full_name}]</b> –£–∑–Ω–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –ª—Å", parse_mode="html") #–≠—Ç–æ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –≤–∏–¥–µ—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–µ–ª–∞—é—Ç —Å –≤–∞—à–∏–º –±–æ—Ç–æ–º. –í–º–µ—Å—Ç–æ 1 —É–∫–∞–∂–∏—Ç–µ id —á–∞—Ç–∞ –∫—É–¥–∞ –¥–æ–ª–∂–µ–Ω –ø–∏—Å–∞—Ç—å –±–æ—Ç
    await message.answer(text=cfg.HELP_COMMAND, reply_markup=ikb)
  if message.chat.type == 'supergroup':
    #await bot.send_message(chat_id=1,text="@"f"{message.from_user.username} <b>"f"[{message.from_user.full_name}]</b> –£–∑–Ω–∞—ë—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —á–∞—Ç–µ", parse_mode="html") #–≠—Ç–æ –∫–∞–∫ –ø—Ä–∏–º–µ—Ä —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –≤–∏–¥–µ—Ç—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–µ–ª–∞—é—Ç —Å –≤–∞—à–∏–º –±–æ—Ç–æ–º. –í–º–µ—Å—Ç–æ 1 —É–∫–∞–∂–∏—Ç–µ id —á–∞—Ç–∞ –∫—É–¥–∞ –¥–æ–ª–∂–µ–Ω –ø–∏—Å–∞—Ç—å –±–æ—Ç
    await message.answer(text=cfg.HELP_COMMAND, reply_markup=ikb)


#–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@dp.message_handler(commands=["stats"])
async def statik(message: types.Message):
  if message.chat.type == 'private':    
      cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
      row = cursor.fetchone()
      if row is None:
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win)) —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ —á–µ–ª–≤–æ–µ–∫ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —É–∑–Ω–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await message.reply("‚ùóÔ∏è–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –∫–∏–Ω—å –∫—É–±–∏–∫‚ùóÔ∏è")
      elif row is not None:
        losse1 = db.cur.execute (f"SELECT losse INTEGER FROM winka WHERE user_id == '{message.from_user.id}'")
        show1 = losse1.fetchall()
        show1 = show1[0][0]
        win1 = db.cur.execute (f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'")
        show2 = win1.fetchall()
        show2 = show2[0][0]
        await message.reply(f'‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢—ã –ø–æ–±–µ–¥–∏–ª: {show2} —Ä–∞–∑\n‚ò†Ô∏è–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª: {show1} —Ä–∞–∑')
  if message.chat.type == 'supergroup':
      cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
      row = cursor.fetchone()
      if row is None:
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win)) —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ —á–µ–ª–≤–æ–µ–∫ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ —É–∑–Ω–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        await message.reply("‚ùóÔ∏è–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏, –∫–∏–Ω—å –∫—É–±–∏–∫‚ùóÔ∏è")
      elif row is not None:
        losse1 = db.cur.execute (f"SELECT losse INTEGER FROM winka WHERE user_id == '{message.from_user.id}'")
        show1 = losse1.fetchall()
        show1 = show1[0][0]
        win1 = db.cur.execute (f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'")
        show2 = win1.fetchall()
        show2 = show2[0][0]
        await message.reply(f'‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢—ã –ø–æ–±–µ–¥–∏–ª: {show2} —Ä–∞–∑\n‚ò†Ô∏è–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª: {show1} —Ä–∞–∑')
     
        
#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞ –¥–ª—è –º—É—Ç–∞
class MyFilter(BoundFilter):
    key = 'is_admin'

    def __init__(self, is_admin):
        self.is_admin = is_admin

    async def check(self, message: types.Message):
        member = await bot.get_chat_member(message.chat.id, message.from_user.id)
        return member.is_chat_admin() or  message.from_user.id == 111 #–í–º–µ—Å—Ç–æ 111 –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –∞–π–¥–∏ –∏ –±–æ—Ç –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å –≤–∞—Å –∞–¥–º–∏–Ω–æ–º

dp.filters_factory.bind(MyFilter)

#–ö–æ–º–∞–Ω–¥–∞ –º—É—Ç–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
@rate_limit(2)
@dp.message_handler(commands=["mute"], commands_prefix='/', is_admin=True)
async def hard_mute(message: types.Message):
  if message.chat.type == 'private':
    await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∞—Ç–∞")
  if message.chat.type == 'supergroup' and not message.reply_to_message:
    await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ") 
  elif message.reply_to_message:  
    await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, perms1)
    await message.answer(text=f"({message.reply_to_message.from_user.full_name})   @{message.reply_to_message.from_user.username}\n\n‚ò†Ô∏è–¢–µ–±–µ –≤—Å—Ç–∞–≤–∏–ª–∏ –∫–ª—è–ø –Ω–∞ –ø–æ–∂–∏–∑–Ω–µ–Ω–æ!‚ò†Ô∏è")
  return hard_mute

#–ö–æ–º–∞–Ω–¥–∞ –º—É—Ç–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω
@rate_limit(2)
@dp.message_handler(commands=["mute"], commands_prefix='/')
async def hard_mute1(message: types.Message):
  if message.chat.type == 'private':
    await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∞—Ç–∞")
  if message.chat.type == 'supergroup':
    await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
  return hard_mute1
        
#–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–∑–º—É—Ç–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
@rate_limit(2)
@dp.message_handler(commands=["unmute"], commands_prefix='/', is_admin=True)
async def unmute(message: types.Message):
  if message.chat.type == 'private':
     await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∞—Ç–∞")
  if message.chat.type == 'supergroup' and not message.reply_to_message:
    await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
  elif message.reply_to_message:  
      await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, perms2)
      await message.answer(text=f"({message.reply_to_message.from_user.full_name})   @{message.reply_to_message.from_user.username}\n\nüïä–¢–µ–±–µ –≤—ã—Ç–∞—â–∏–ª–∏ –∫–ª—è–ø!üïä")
  return unmute

#–ö–æ–º–∞–Ω–¥–∞ —Ä–∞–º—É—Ç–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω
@rate_limit(2)
@dp.message_handler(commands=["unmute"], commands_prefix='/')
async def unmute1(message: types.Message):
  if message.chat.type == 'private':
     await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∞—Ç–∞")
  if message.chat.type == 'supergroup':
     await message.reply("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
  return unmute1
         
#–°—Ç–∏–∫–µ—Ä –Ω–∞ —Å–ª–æ–≤–æ "–ú—è—É"   
@dp.message_handler(Text('–º—è—É'))
async def meow(message: types.Message):
      print(await bot.send_sticker(chat_id=message.chat.id,
                               sticker="CAACAgIAAxkBAAEJFblkbR2sqlRnT9Ac04s5Xvel3ViVSAACURkAAnFS-EtvrNccpDBEai8E"))
      await message.delete()
      return meow

#–°—Ç–∏–∫–µ—Ä –Ω–∞ —Å–ª–æ–≤–æ "–ú—è—É" –Ω–æ –¥—Ä—É–≥–æ–π  
@dp.message_handler(Text('–ú—è—É'))
async def Meow(message: types.Message):
      await bot.send_sticker(chat_id=message.chat.id,
                               sticker="CAACAgIAAxkBAAEJ4GNkyO0OnOHDyGiLQfHWVR6kXLfmcwACHBgAAgtAaEhBHgEr23Yjcy8E")
      await message.delete()
      return Meow

#–°—Ç–∏–∫–µ—Ä –Ω–∞ –≠–º–æ–¥–∑–∏   
@dp.message_handler(Text('‚úåÔ∏è'))
async def hi(message: types.Message):
      await bot.send_sticker(chat_id=message.chat.id,
                               sticker="CAACAgIAAxkBAAEJSI9khgHkOk783T4sHwGwdoIgGHDaXwADLgACJ1EwSVBao9ZuouNKLwQ")
      return hi

#–°—Ç–∏–∫–µ—Ä –Ω–∞ –≠–º–æ–¥–∑–∏ 
@dp.message_handler(Text('ü¶Ñ'))
async def poni(message: types.Message):
      await bot.send_sticker(chat_id=message.chat.id,
                               sticker="CAACAgIAAxkBAAEJSJFkhgL9ZcpZO_qkKSoIFTQLQaaCmgAC_y4AAmdD-Uopwlkzh7zYoS8E")
      return poni

#–°—Ç–∏–∫–µ—Ä –Ω–∞ –≠–º–æ–¥–∑–∏
@dp.message_handler(Text('üßü'))
async def zombe(message: types.Message):
      await bot.send_sticker(chat_id=message.chat.id,
                               sticker="CAACAgIAAxkBAAEJSJNkhgMwUamFn1-5kmaywdvqF9HUwQAC4CcAAs1z8UisGGmMME2BXC8E")
      return zombe


#–ë–ª–æ–∫ —Å –∫—É–±–∞–º–∏
kukb1 = ("!–ö—É–± 1", "!–∫—É–± 1") 
@rate_limit(5)
@dp.message_handler(Text (kukb1))
async def cub2(message: types.Message):
  if message.chat.type == 'supergroup': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
    cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
    row = cursor.fetchone()
    if row is None:
      db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win)) –°–æ–∑–¥–∞—ë—Ç –ë–î —Å –Ω—É–ª—è–º–∏
      await message.reply("‚ùóÔ∏è–¢—ã –∫–∏–¥–∞–µ—à—å –∫—É–±–∏–∫ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑–æ–∫‚ùóÔ∏è")
    elif row is not None:
      result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'") # db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) –ë–µ—Ä—ë—Ç –∑–Ω–∞—á–µ–Ω–∏—è  –∏–∑ –ë–î
      perem = result_losse.fetchall()[0][0]
      result_win = db.cur.execute ((f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'"))
      perem2 = result_win.fetchall()[0][0]
      db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = perem, win = perem2)
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 1 < kub:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
        await sleep(600)
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
      elif 1 > kub: 
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
        await sleep(600)
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)                                                           
      else:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET win = win +1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")
  elif message.chat.type == 'private': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å –±–æ—Ç–∞
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 1 < kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      elif 1 > kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      else:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")              

kukb2 = ("!–ö—É–± 2", "!–∫—É–± 2") 
@rate_limit(5)
@dp.message_handler(Text (kukb2))
async def cub2(message: types.Message):
  if message.chat.type == 'supergroup': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
    cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
    row = cursor.fetchone()
    if row is None:
      db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win))
      await message.reply("‚ùóÔ∏è–¢—ã –∫–∏–¥–∞–µ—à—å –∫—É–±–∏–∫ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑–æ–∫‚ùóÔ∏è")
    elif row is not None:
      result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
      perem = result_losse.fetchall()[0][0]
      result_win = db.cur.execute ((f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'"))
      perem2 = result_win.fetchall()[0][0]
      db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = perem, win = perem2)
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 2 < kub:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
        await sleep(600)
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
      elif 2 > kub:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()  
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
        await sleep(600)
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)                                                              
      else:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET win = win +1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")
  elif message.chat.type == 'private': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å –±–æ—Ç–∞
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 2 < kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      elif 2 > kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      else:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")              


kukb3 = ("!–ö—É–± 3", "!–∫—É–± 3") 
@rate_limit(5)
@dp.message_handler(Text (kukb3))
async def cub2(message: types.Message):
  if message.chat.type == 'supergroup': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
    cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
    row = cursor.fetchone()
    if row is None:
      db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win))
      await message.reply("‚ùóÔ∏è–¢—ã –∫–∏–¥–∞–µ—à—å –∫—É–±–∏–∫ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑–æ–∫‚ùóÔ∏è")
    elif row is not None:
      result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
      perem = result_losse.fetchall()[0][0]
      result_win = db.cur.execute ((f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'"))
      perem2 = result_win.fetchall()[0][0]
      db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = perem, win = perem2)
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 3 < kub:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
        await sleep(600)
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
      elif 3 > kub:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()   
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
        await sleep(600)
        await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)                                                            
      else:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        db.cur.execute(f"UPDATE winka SET win = win +1 WHERE user_id == '{message.from_user.id}'")
        db.db.commit()
        await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")
  elif message.chat.type == 'private': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å –±–æ—Ç–∞
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 3 < kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      elif 3 > kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      else:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")              


kukb4 = ("!–ö—É–± 4", "!–∫—É–± 4") 
@rate_limit(5)
@dp.message_handler(Text (kukb4))
async def cub2(message: types.Message):
  if message.chat.type == 'supergroup': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
      cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
      row = cursor.fetchone()
      if row is None:
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win))
        await message.reply("‚ùóÔ∏è–¢—ã –∫–∏–¥–∞–µ—à—å –∫—É–±–∏–∫ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑–æ–∫‚ùóÔ∏è") 
      elif row is not None:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        perem = result_losse.fetchall()[0][0]
        result_win = db.cur.execute ((f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'"))
        perem2 = result_win.fetchall()[0][0]
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = perem, win = perem2)
        kub = await bot.send_dice(message.chat.id)
        kub = kub['dice']['value']
        await sleep (4)
        if 4 < kub:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit()
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
          await sleep(600)
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
        elif 4 > kub:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit() 
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
          await sleep(600)
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)                                                              
        else:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET win = win +1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit()
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}") 
  elif message.chat.type == 'private': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å –±–æ—Ç–∞
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 4 < kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      elif 4 > kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      else:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")       

kukb5 = ("!–ö—É–± 5", "!–∫—É–± 5") 
@rate_limit(5)
@dp.message_handler(Text (kukb5))
async def cub2(message: types.Message):
  if message.chat.type == 'supergroup': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
      cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
      row = cursor.fetchone()
      if row is None:
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win))
        await message.reply("‚ùóÔ∏è–¢—ã –∫–∏–¥–∞–µ—à—å –∫—É–±–∏–∫ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑–æ–∫‚ùóÔ∏è")
      elif row is not None:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        perem = result_losse.fetchall()[0][0]
        result_win = db.cur.execute ((f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'"))
        perem2 = result_win.fetchall()[0][0]
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = perem, win = perem2)
        kub = await bot.send_dice(message.chat.id)
        kub = kub['dice']['value']
        await sleep (4)
        if 5 < kub:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit()
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
          await sleep(600)
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
        elif 5 > kub:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit() 
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
          await sleep(600)
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)                                                             
        else:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET win = win +1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit()
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")
  elif message.chat.type == 'private': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å –±–æ—Ç–∞
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 5 < kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      elif 5 > kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      else:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}")   
         
kukb6 = ("!–ö—É–± 6", "!–∫—É–± 6") 
@rate_limit(5)
@dp.message_handler(Text (kukb6))
async def cub2(message: types.Message):
  if message.chat.type == 'supergroup': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ
      cursor = db.cur.execute(f"SELECT user_id FROM winka WHERE user_id == '{message.from_user.id}'")
      row = cursor.fetchone()
      if row is None:
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = 0, win = 0) # cursor = db.execute('INSERT INTO table_name (user_id, username, losse, win) VALUES (?, ?, ?, ?)',(user_id, username, losse, win))
        await message.reply("‚ùóÔ∏è–¢—ã –∫–∏–¥–∞–µ—à—å –∫—É–±–∏–∫ –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –ø–æ —ç—Ç–æ–º—É –Ω–∞–ø–∏—à–∏ –µ—â—ë —Ä–∞–∑–æ–∫‚ùóÔ∏è")
      elif row is not None:
        result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
        perem = result_losse.fetchall()[0][0]
        result_win = db.cur.execute ((f"SELECT win FROM winka WHERE user_id == '{message.from_user.id}'"))
        perem2 = result_win.fetchall()[0][0]
        db.db_table_val(user_id=message.from_user.id, username=message.from_user.username, losse = perem, win = perem2)
        kub = await bot.send_dice(message.chat.id)
        kub = kub['dice']['value']
        await sleep (4)
        if 6 < kub:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit()
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
          await sleep(600)
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
        elif 6 > kub:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET losse = losse + 1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit() 
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\n‚õîÔ∏è–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –º—É—Ç –Ω–∞ 10 –º–∏–Ω—É—Ç")
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
          await sleep(600)
          await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)                                                              
        else:
          result_losse = db.cur.execute (f"SELECT losse FROM winka WHERE user_id == '{message.from_user.id}'")
          db.cur.execute(f"UPDATE winka SET win = win +1 WHERE user_id == '{message.from_user.id}'")
          db.db.commit()
          await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}") 
  elif message.chat.type == 'private': #–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª—Å –±–æ—Ç–∞
      kub = await bot.send_dice(message.chat.id)
      kub = kub['dice']['value']
      await sleep (4)
      if 6 < kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      elif 6 > kub:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\n‚ò†Ô∏è–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ!\nüëê–í—ã–ø–∞–ª–æ: {kub}\nüëÅ–í –ª—Å –º—É—Ç–∞ –Ω–µ—Ç")
      else:
         await message.reply(text=f"‚ú®{message.from_user.full_name}‚ú®\n\nüèÜ–¢–´ –ü–û–ë–ï–î–ò–õ!\nüëê–í—ã–ø–∞–ª–æ: {kub}") 

#–†–∞–±–æ—Ç–∞ –∫—É–±–∞ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–µ–ª —á–∏—Å–ª–æ      
kukb = ("!–ö—É–±", "!–∫—É–±")
@rate_limit(5)    
@dp.message_handler(Text(kukb))
async def cub_none(message: types.Message):
    await message.reply(text='‚õîÔ∏è–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7')
    return cub_none

#–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª '–Ø –ª—é–±–ª—é –ü—É—Ç–∏–Ω–∞'
@rate_limit(5)
@dp.message_handler(Text('–Ø –ª—é–±–ª—é –ü—É—Ç–∏–Ω–∞'))
async def silent_Putin(message: types.Message):
    await message.reply(text= "–ê –ü—É—Ç–∏–Ω –Ω–∏–∫–æ–≥–æ –Ω–µ –ª—é–±–∏—Ç")
    await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms1)
    await sleep(30) #–ú—É—Ç –Ω–∞ 30 —Å–µ–∫—É–Ω–¥
    await bot.restrict_chat_member(message.chat.id, message.from_user.id, perms2)
    return silent_Putin


#–°—Ç–∏–∫–µ—Ä –Ω–∞ —Å–ª–æ–≤–∞ "–¢—ã —Å—Ç—Ä–∞–Ω–Ω—ã–π"
strann = ("–¢—ã —Å—Ç—Ä–∞–Ω–Ω—ã–π", "—Ç—ã —Å—Ç—Ä–∞–Ω–Ω—ã–π")
@dp.message_handler(Text(strann))
async def stran(message: types.Message):
      await bot.send_sticker(chat_id=message.chat.id,
                               sticker="CAACAgIAAxkBAAEKIFRk6OmvWvMZzoSlo3Yt1vjsLqYbNgAC9DYAArv0QUo5ytf2145SdjAE")
      return stran


 #!!!–§–∏–ª—å—Ç—Ä –Ω–∞ —Å–ª–æ–≤–∞!!! –ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–∫–∞–∂–∏—Ç–µ —Å–ª–æ–≤–∞ –≤ cfg —Ñ–∞–π–ª–µ
@dp.message_handler(content_types='text')
async def filter(message: types.Message):
    text = message.text.lower()
    for word in cfg.WORDS:
            if word in text:
                await message.delete()


if __name__ == '__main__':
   dp.middleware.setup(ThrottlingMiddleware())


   executor.start_polling(dp, on_startup = on_sturtup, skip_updates=True)